// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.user.proto

#include "chat.user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ChatPb {
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class RefreshUserREQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefreshUserREQ>
      _instance;
} _RefreshUserREQ_default_instance_;
}  // namespace ChatPb
namespace protobuf_chat_2euser_2eproto {
static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_User_default_instance_;
    new (ptr) ::ChatPb::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUser}, {}};

static void InitDefaultsRefreshUserREQ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_RefreshUserREQ_default_instance_;
    new (ptr) ::ChatPb::RefreshUserREQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::RefreshUserREQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RefreshUserREQ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRefreshUserREQ}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RefreshUserREQ.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, chatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::User, birthday_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::RefreshUserREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::RefreshUserREQ, uid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ChatPb::User)},
  { 12, -1, sizeof(::ChatPb::RefreshUserREQ)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_RefreshUserREQ_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "chat.user.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017chat.user.proto\022\006ChatPb\"r\n\004User\022\n\n\002id\030"
      "\001 \001(\t\022\016\n\006chatId\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\016\n\006r"
      "emark\030\004 \001(\t\022\016\n\006avatar\030\005 \001(\t\022\016\n\006gender\030\006 "
      "\001(\t\022\020\n\010birthday\030\007 \001(\t\"\035\n\016RefreshUserREQ\022"
      "\013\n\003uid\030\001 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chat.user.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_chat_2euser_2eproto
namespace ChatPb {

// ===================================================================

void User::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kIdFieldNumber;
const int User::kChatIdFieldNumber;
const int User::kNameFieldNumber;
const int User::kRemarkFieldNumber;
const int User::kAvatarFieldNumber;
const int User::kGenderFieldNumber;
const int User::kBirthdayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2euser_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  chatid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chatid().size() > 0) {
    chatid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar().size() > 0) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gender().size() > 0) {
    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthday().size() > 0) {
    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatPb.User)
}

void User::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chatid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

User::~User() {
  // @@protoc_insertion_point(destructor:ChatPb.User)
  SharedDtor();
}

void User::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chatid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_chat_2euser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2euser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2euser_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chatid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.User.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chatId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chatid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chatid().data(), static_cast<int>(this->chatid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.User.chatId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.User.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.User.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string avatar = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar().data(), static_cast<int>(this->avatar().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.User.avatar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gender = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gender().data(), static_cast<int>(this->gender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.User.gender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthday = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), static_cast<int>(this->birthday().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.User.birthday"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string chatId = 2;
  if (this->chatid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatid().data(), static_cast<int>(this->chatid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.chatId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chatid(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->remark(), output);
  }

  // string avatar = 5;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), static_cast<int>(this->avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->avatar(), output);
  }

  // string gender = 6;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.gender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->gender(), output);
  }

  // string birthday = 7;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->birthday(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string chatId = 2;
  if (this->chatid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatid().data(), static_cast<int>(this->chatid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.chatId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chatid(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->remark(), target);
  }

  // string avatar = 5;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), static_cast<int>(this->avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.avatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->avatar(), target);
  }

  // string gender = 6;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.gender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->gender(), target);
  }

  // string birthday = 7;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), static_cast<int>(this->birthday().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.User.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->birthday(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string chatId = 2;
  if (this->chatid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chatid());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string avatar = 5;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar());
  }

  // string gender = 6;
  if (this->gender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gender());
  }

  // string birthday = 7;
  if (this->birthday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.chatid().size() > 0) {

    chatid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.avatar().size() > 0) {

    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  if (from.gender().size() > 0) {

    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  chatid_.Swap(&other->chatid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_.Swap(&other->avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gender_.Swap(&other->gender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  birthday_.Swap(&other->birthday_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_chat_2euser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2euser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefreshUserREQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshUserREQ::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshUserREQ::RefreshUserREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2euser_2eproto::scc_info_RefreshUserREQ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.RefreshUserREQ)
}
RefreshUserREQ::RefreshUserREQ(const RefreshUserREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatPb.RefreshUserREQ)
}

void RefreshUserREQ::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RefreshUserREQ::~RefreshUserREQ() {
  // @@protoc_insertion_point(destructor:ChatPb.RefreshUserREQ)
  SharedDtor();
}

void RefreshUserREQ::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RefreshUserREQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RefreshUserREQ::descriptor() {
  ::protobuf_chat_2euser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2euser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshUserREQ& RefreshUserREQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2euser_2eproto::scc_info_RefreshUserREQ.base);
  return *internal_default_instance();
}


void RefreshUserREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.RefreshUserREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RefreshUserREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.RefreshUserREQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.RefreshUserREQ.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.RefreshUserREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.RefreshUserREQ)
  return false;
#undef DO_
}

void RefreshUserREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.RefreshUserREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.RefreshUserREQ.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.RefreshUserREQ)
}

::google::protobuf::uint8* RefreshUserREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.RefreshUserREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.RefreshUserREQ.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.RefreshUserREQ)
  return target;
}

size_t RefreshUserREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.RefreshUserREQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshUserREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.RefreshUserREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshUserREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshUserREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.RefreshUserREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.RefreshUserREQ)
    MergeFrom(*source);
  }
}

void RefreshUserREQ::MergeFrom(const RefreshUserREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.RefreshUserREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
}

void RefreshUserREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.RefreshUserREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshUserREQ::CopyFrom(const RefreshUserREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.RefreshUserREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshUserREQ::IsInitialized() const {
  return true;
}

void RefreshUserREQ::Swap(RefreshUserREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshUserREQ::InternalSwap(RefreshUserREQ* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RefreshUserREQ::GetMetadata() const {
  protobuf_chat_2euser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2euser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ChatPb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::User* Arena::CreateMaybeMessage< ::ChatPb::User >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::RefreshUserREQ* Arena::CreateMaybeMessage< ::ChatPb::RefreshUserREQ >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::RefreshUserREQ >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
