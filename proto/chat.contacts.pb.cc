// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.contacts.proto

#include "chat.contacts.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chat_2euser_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_2euser_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_User;
}  // namespace protobuf_chat_2euser_2eproto
namespace ChatPb {
class ContactREQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactREQ>
      _instance;
} _ContactREQ_default_instance_;
class ContactRESDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactRES>
      _instance;
} _ContactRES_default_instance_;
class SearchUserREQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchUserREQ>
      _instance;
} _SearchUserREQ_default_instance_;
class SearchUserRESDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchUserRES>
      _instance;
} _SearchUserRES_default_instance_;
class ApplyFriendREQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyFriendREQ>
      _instance;
} _ApplyFriendREQ_default_instance_;
class ApplyFriendRESDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyFriendRES>
      _instance;
} _ApplyFriendRES_default_instance_;
class AgreeFriendREQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgreeFriendREQ>
      _instance;
} _AgreeFriendREQ_default_instance_;
class AgreeFriendRESDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgreeFriendRES>
      _instance;
} _AgreeFriendRES_default_instance_;
class DeleteFriendREQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendREQ>
      _instance;
} _DeleteFriendREQ_default_instance_;
class DeleteFriendRESDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendRES>
      _instance;
} _DeleteFriendRES_default_instance_;
}  // namespace ChatPb
namespace protobuf_chat_2econtacts_2eproto {
static void InitDefaultsContactREQ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_ContactREQ_default_instance_;
    new (ptr) ::ChatPb::ContactREQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::ContactREQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ContactREQ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsContactREQ}, {}};

static void InitDefaultsContactRES() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_ContactRES_default_instance_;
    new (ptr) ::ChatPb::ContactRES();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::ContactRES::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ContactRES =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsContactRES}, {
      &protobuf_chat_2euser_2eproto::scc_info_User.base,}};

static void InitDefaultsSearchUserREQ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_SearchUserREQ_default_instance_;
    new (ptr) ::ChatPb::SearchUserREQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::SearchUserREQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchUserREQ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchUserREQ}, {}};

static void InitDefaultsSearchUserRES() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_SearchUserRES_default_instance_;
    new (ptr) ::ChatPb::SearchUserRES();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::SearchUserRES::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SearchUserRES =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSearchUserRES}, {
      &protobuf_chat_2euser_2eproto::scc_info_User.base,}};

static void InitDefaultsApplyFriendREQ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_ApplyFriendREQ_default_instance_;
    new (ptr) ::ChatPb::ApplyFriendREQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::ApplyFriendREQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApplyFriendREQ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApplyFriendREQ}, {}};

static void InitDefaultsApplyFriendRES() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_ApplyFriendRES_default_instance_;
    new (ptr) ::ChatPb::ApplyFriendRES();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::ApplyFriendRES::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApplyFriendRES =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApplyFriendRES}, {}};

static void InitDefaultsAgreeFriendREQ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_AgreeFriendREQ_default_instance_;
    new (ptr) ::ChatPb::AgreeFriendREQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::AgreeFriendREQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AgreeFriendREQ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAgreeFriendREQ}, {}};

static void InitDefaultsAgreeFriendRES() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_AgreeFriendRES_default_instance_;
    new (ptr) ::ChatPb::AgreeFriendRES();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::AgreeFriendRES::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AgreeFriendRES =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAgreeFriendRES}, {}};

static void InitDefaultsDeleteFriendREQ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_DeleteFriendREQ_default_instance_;
    new (ptr) ::ChatPb::DeleteFriendREQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::DeleteFriendREQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteFriendREQ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteFriendREQ}, {}};

static void InitDefaultsDeleteFriendRES() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ChatPb::_DeleteFriendRES_default_instance_;
    new (ptr) ::ChatPb::DeleteFriendRES();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChatPb::DeleteFriendRES::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteFriendRES =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteFriendRES}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ContactREQ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContactRES.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchUserREQ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchUserRES.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplyFriendREQ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplyFriendRES.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AgreeFriendREQ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AgreeFriendRES.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteFriendREQ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteFriendRES.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ContactREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ContactREQ, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ContactRES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ContactRES, users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ContactRES, deleteuserids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ContactRES, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::SearchUserREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::SearchUserREQ, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::SearchUserRES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::SearchUserRES, users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ApplyFriendREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ApplyFriendREQ, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ApplyFriendREQ, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ApplyFriendRES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ApplyFriendRES, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::ApplyFriendRES, succeeded_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::AgreeFriendREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::AgreeFriendREQ, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::AgreeFriendRES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::AgreeFriendRES, chatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::AgreeFriendRES, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::DeleteFriendREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::DeleteFriendREQ, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::DeleteFriendRES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::DeleteFriendRES, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::DeleteFriendRES, succeeded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChatPb::DeleteFriendRES, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ChatPb::ContactREQ)},
  { 6, -1, sizeof(::ChatPb::ContactRES)},
  { 14, -1, sizeof(::ChatPb::SearchUserREQ)},
  { 20, -1, sizeof(::ChatPb::SearchUserRES)},
  { 26, -1, sizeof(::ChatPb::ApplyFriendREQ)},
  { 33, -1, sizeof(::ChatPb::ApplyFriendRES)},
  { 40, -1, sizeof(::ChatPb::AgreeFriendREQ)},
  { 46, -1, sizeof(::ChatPb::AgreeFriendRES)},
  { 53, -1, sizeof(::ChatPb::DeleteFriendREQ)},
  { 59, -1, sizeof(::ChatPb::DeleteFriendRES)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_ContactREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_ContactRES_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_SearchUserREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_SearchUserRES_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_ApplyFriendREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_ApplyFriendRES_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_AgreeFriendREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_AgreeFriendRES_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_DeleteFriendREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ChatPb::_DeleteFriendRES_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "chat.contacts.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023chat.contacts.proto\022\006ChatPb\032\017chat.user"
      ".proto\"\037\n\nContactREQ\022\021\n\ttimestamp\030\001 \001(\003\""
      "S\n\nContactRES\022\033\n\005users\030\001 \003(\0132\014.ChatPb.Us"
      "er\022\025\n\rdeleteUserIds\030\002 \003(\t\022\021\n\ttimestamp\030\003"
      " \001(\003\"\034\n\rSearchUserREQ\022\013\n\003key\030\001 \001(\t\",\n\rSe"
      "archUserRES\022\033\n\005users\030\001 \003(\0132\014.ChatPb.User"
      "\".\n\016ApplyFriendREQ\022\013\n\003uid\030\001 \001(\t\022\017\n\007messa"
      "ge\030\002 \001(\t\"0\n\016ApplyFriendRES\022\013\n\003uid\030\001 \001(\t\022"
      "\021\n\tsucceeded\030\002 \001(\010\"\035\n\016AgreeFriendREQ\022\013\n\003"
      "uid\030\001 \001(\t\"1\n\016AgreeFriendRES\022\016\n\006chatId\030\001 "
      "\001(\t\022\017\n\007message\030\002 \001(\t\"\036\n\017DeleteFriendREQ\022"
      "\013\n\003uid\030\001 \001(\t\"B\n\017DeleteFriendRES\022\013\n\003uid\030\001"
      " \001(\t\022\021\n\tsucceeded\030\002 \001(\010\022\017\n\007message\030\003 \001(\t"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 528);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chat.contacts.proto", &protobuf_RegisterTypes);
  ::protobuf_chat_2euser_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_chat_2econtacts_2eproto
namespace ChatPb {

// ===================================================================

void ContactREQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactREQ::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactREQ::ContactREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_ContactREQ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.ContactREQ)
}
ContactREQ::ContactREQ(const ContactREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:ChatPb.ContactREQ)
}

void ContactREQ::SharedCtor() {
  timestamp_ = GOOGLE_LONGLONG(0);
}

ContactREQ::~ContactREQ() {
  // @@protoc_insertion_point(destructor:ChatPb.ContactREQ)
  SharedDtor();
}

void ContactREQ::SharedDtor() {
}

void ContactREQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContactREQ::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactREQ& ContactREQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_ContactREQ.base);
  return *internal_default_instance();
}


void ContactREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.ContactREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ContactREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.ContactREQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.ContactREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.ContactREQ)
  return false;
#undef DO_
}

void ContactREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.ContactREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.ContactREQ)
}

::google::protobuf::uint8* ContactREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.ContactREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.ContactREQ)
  return target;
}

size_t ContactREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.ContactREQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContactREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.ContactREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.ContactREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.ContactREQ)
    MergeFrom(*source);
  }
}

void ContactREQ::MergeFrom(const ContactREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.ContactREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ContactREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.ContactREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactREQ::CopyFrom(const ContactREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.ContactREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactREQ::IsInitialized() const {
  return true;
}

void ContactREQ::Swap(ContactREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactREQ::InternalSwap(ContactREQ* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContactREQ::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactRES::InitAsDefaultInstance() {
}
void ContactRES::clear_users() {
  users_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactRES::kUsersFieldNumber;
const int ContactRES::kDeleteUserIdsFieldNumber;
const int ContactRES::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactRES::ContactRES()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_ContactRES.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.ContactRES)
}
ContactRES::ContactRES(const ContactRES& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      deleteuserids_(from.deleteuserids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:ChatPb.ContactRES)
}

void ContactRES::SharedCtor() {
  timestamp_ = GOOGLE_LONGLONG(0);
}

ContactRES::~ContactRES() {
  // @@protoc_insertion_point(destructor:ChatPb.ContactRES)
  SharedDtor();
}

void ContactRES::SharedDtor() {
}

void ContactRES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContactRES::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactRES& ContactRES::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_ContactRES.base);
  return *internal_default_instance();
}


void ContactRES::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.ContactRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  deleteuserids_.Clear();
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ContactRES::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.ContactRES)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ChatPb.User users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string deleteUserIds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_deleteuserids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deleteuserids(this->deleteuserids_size() - 1).data(),
            static_cast<int>(this->deleteuserids(this->deleteuserids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.ContactRES.deleteUserIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.ContactRES)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.ContactRES)
  return false;
#undef DO_
}

void ContactRES::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.ContactRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatPb.User users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->users(static_cast<int>(i)),
      output);
  }

  // repeated string deleteUserIds = 2;
  for (int i = 0, n = this->deleteuserids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deleteuserids(i).data(), static_cast<int>(this->deleteuserids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ContactRES.deleteUserIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->deleteuserids(i), output);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.ContactRES)
}

::google::protobuf::uint8* ContactRES::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.ContactRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatPb.User users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->users(static_cast<int>(i)), deterministic, target);
  }

  // repeated string deleteUserIds = 2;
  for (int i = 0, n = this->deleteuserids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deleteuserids(i).data(), static_cast<int>(this->deleteuserids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ContactRES.deleteUserIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->deleteuserids(i), target);
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.ContactRES)
  return target;
}

size_t ContactRES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.ContactRES)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ChatPb.User users = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // repeated string deleteUserIds = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->deleteuserids_size());
  for (int i = 0, n = this->deleteuserids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->deleteuserids(i));
  }

  // int64 timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContactRES::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.ContactRES)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactRES* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactRES>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.ContactRES)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.ContactRES)
    MergeFrom(*source);
  }
}

void ContactRES::MergeFrom(const ContactRES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.ContactRES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  deleteuserids_.MergeFrom(from.deleteuserids_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ContactRES::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.ContactRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactRES::CopyFrom(const ContactRES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.ContactRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactRES::IsInitialized() const {
  return true;
}

void ContactRES::Swap(ContactRES* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactRES::InternalSwap(ContactRES* other) {
  using std::swap;
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  deleteuserids_.InternalSwap(CastToBase(&other->deleteuserids_));
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContactRES::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchUserREQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchUserREQ::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchUserREQ::SearchUserREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_SearchUserREQ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.SearchUserREQ)
}
SearchUserREQ::SearchUserREQ(const SearchUserREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatPb.SearchUserREQ)
}

void SearchUserREQ::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SearchUserREQ::~SearchUserREQ() {
  // @@protoc_insertion_point(destructor:ChatPb.SearchUserREQ)
  SharedDtor();
}

void SearchUserREQ::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchUserREQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchUserREQ::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchUserREQ& SearchUserREQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_SearchUserREQ.base);
  return *internal_default_instance();
}


void SearchUserREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.SearchUserREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SearchUserREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.SearchUserREQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.SearchUserREQ.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.SearchUserREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.SearchUserREQ)
  return false;
#undef DO_
}

void SearchUserREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.SearchUserREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.SearchUserREQ.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.SearchUserREQ)
}

::google::protobuf::uint8* SearchUserREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.SearchUserREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.SearchUserREQ.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.SearchUserREQ)
  return target;
}

size_t SearchUserREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.SearchUserREQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchUserREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.SearchUserREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchUserREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchUserREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.SearchUserREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.SearchUserREQ)
    MergeFrom(*source);
  }
}

void SearchUserREQ::MergeFrom(const SearchUserREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.SearchUserREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void SearchUserREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.SearchUserREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchUserREQ::CopyFrom(const SearchUserREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.SearchUserREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchUserREQ::IsInitialized() const {
  return true;
}

void SearchUserREQ::Swap(SearchUserREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchUserREQ::InternalSwap(SearchUserREQ* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchUserREQ::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchUserRES::InitAsDefaultInstance() {
}
void SearchUserRES::clear_users() {
  users_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchUserRES::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchUserRES::SearchUserRES()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_SearchUserRES.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.SearchUserRES)
}
SearchUserRES::SearchUserRES(const SearchUserRES& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChatPb.SearchUserRES)
}

void SearchUserRES::SharedCtor() {
}

SearchUserRES::~SearchUserRES() {
  // @@protoc_insertion_point(destructor:ChatPb.SearchUserRES)
  SharedDtor();
}

void SearchUserRES::SharedDtor() {
}

void SearchUserRES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchUserRES::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchUserRES& SearchUserRES::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_SearchUserRES.base);
  return *internal_default_instance();
}


void SearchUserRES::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.SearchUserRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  _internal_metadata_.Clear();
}

bool SearchUserRES::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.SearchUserRES)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ChatPb.User users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.SearchUserRES)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.SearchUserRES)
  return false;
#undef DO_
}

void SearchUserRES::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.SearchUserRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatPb.User users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->users(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.SearchUserRES)
}

::google::protobuf::uint8* SearchUserRES::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.SearchUserRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatPb.User users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->users(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.SearchUserRES)
  return target;
}

size_t SearchUserRES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.SearchUserRES)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ChatPb.User users = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchUserRES::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.SearchUserRES)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchUserRES* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchUserRES>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.SearchUserRES)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.SearchUserRES)
    MergeFrom(*source);
  }
}

void SearchUserRES::MergeFrom(const SearchUserRES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.SearchUserRES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
}

void SearchUserRES::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.SearchUserRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchUserRES::CopyFrom(const SearchUserRES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.SearchUserRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchUserRES::IsInitialized() const {
  return true;
}

void SearchUserRES::Swap(SearchUserRES* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchUserRES::InternalSwap(SearchUserRES* other) {
  using std::swap;
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchUserRES::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApplyFriendREQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyFriendREQ::kUidFieldNumber;
const int ApplyFriendREQ::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyFriendREQ::ApplyFriendREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_ApplyFriendREQ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.ApplyFriendREQ)
}
ApplyFriendREQ::ApplyFriendREQ(const ApplyFriendREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatPb.ApplyFriendREQ)
}

void ApplyFriendREQ::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ApplyFriendREQ::~ApplyFriendREQ() {
  // @@protoc_insertion_point(destructor:ChatPb.ApplyFriendREQ)
  SharedDtor();
}

void ApplyFriendREQ::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplyFriendREQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApplyFriendREQ::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApplyFriendREQ& ApplyFriendREQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_ApplyFriendREQ.base);
  return *internal_default_instance();
}


void ApplyFriendREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.ApplyFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ApplyFriendREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.ApplyFriendREQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.ApplyFriendREQ.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.ApplyFriendREQ.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.ApplyFriendREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.ApplyFriendREQ)
  return false;
#undef DO_
}

void ApplyFriendREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.ApplyFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ApplyFriendREQ.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ApplyFriendREQ.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.ApplyFriendREQ)
}

::google::protobuf::uint8* ApplyFriendREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.ApplyFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ApplyFriendREQ.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ApplyFriendREQ.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.ApplyFriendREQ)
  return target;
}

size_t ApplyFriendREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.ApplyFriendREQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyFriendREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.ApplyFriendREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyFriendREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplyFriendREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.ApplyFriendREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.ApplyFriendREQ)
    MergeFrom(*source);
  }
}

void ApplyFriendREQ::MergeFrom(const ApplyFriendREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.ApplyFriendREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ApplyFriendREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.ApplyFriendREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyFriendREQ::CopyFrom(const ApplyFriendREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.ApplyFriendREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFriendREQ::IsInitialized() const {
  return true;
}

void ApplyFriendREQ::Swap(ApplyFriendREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyFriendREQ::InternalSwap(ApplyFriendREQ* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApplyFriendREQ::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApplyFriendRES::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyFriendRES::kUidFieldNumber;
const int ApplyFriendRES::kSucceededFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyFriendRES::ApplyFriendRES()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_ApplyFriendRES.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.ApplyFriendRES)
}
ApplyFriendRES::ApplyFriendRES(const ApplyFriendRES& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  succeeded_ = from.succeeded_;
  // @@protoc_insertion_point(copy_constructor:ChatPb.ApplyFriendRES)
}

void ApplyFriendRES::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  succeeded_ = false;
}

ApplyFriendRES::~ApplyFriendRES() {
  // @@protoc_insertion_point(destructor:ChatPb.ApplyFriendRES)
  SharedDtor();
}

void ApplyFriendRES::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplyFriendRES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApplyFriendRES::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApplyFriendRES& ApplyFriendRES::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_ApplyFriendRES.base);
  return *internal_default_instance();
}


void ApplyFriendRES::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.ApplyFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  succeeded_ = false;
  _internal_metadata_.Clear();
}

bool ApplyFriendRES::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.ApplyFriendRES)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.ApplyFriendRES.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool succeeded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &succeeded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.ApplyFriendRES)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.ApplyFriendRES)
  return false;
#undef DO_
}

void ApplyFriendRES::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.ApplyFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ApplyFriendRES.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->succeeded(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.ApplyFriendRES)
}

::google::protobuf::uint8* ApplyFriendRES::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.ApplyFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.ApplyFriendRES.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->succeeded(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.ApplyFriendRES)
  return target;
}

size_t ApplyFriendRES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.ApplyFriendRES)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyFriendRES::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.ApplyFriendRES)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyFriendRES* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplyFriendRES>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.ApplyFriendRES)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.ApplyFriendRES)
    MergeFrom(*source);
  }
}

void ApplyFriendRES::MergeFrom(const ApplyFriendRES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.ApplyFriendRES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.succeeded() != 0) {
    set_succeeded(from.succeeded());
  }
}

void ApplyFriendRES::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.ApplyFriendRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyFriendRES::CopyFrom(const ApplyFriendRES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.ApplyFriendRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFriendRES::IsInitialized() const {
  return true;
}

void ApplyFriendRES::Swap(ApplyFriendRES* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyFriendRES::InternalSwap(ApplyFriendRES* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(succeeded_, other->succeeded_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApplyFriendRES::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AgreeFriendREQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgreeFriendREQ::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgreeFriendREQ::AgreeFriendREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_AgreeFriendREQ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.AgreeFriendREQ)
}
AgreeFriendREQ::AgreeFriendREQ(const AgreeFriendREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatPb.AgreeFriendREQ)
}

void AgreeFriendREQ::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AgreeFriendREQ::~AgreeFriendREQ() {
  // @@protoc_insertion_point(destructor:ChatPb.AgreeFriendREQ)
  SharedDtor();
}

void AgreeFriendREQ::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AgreeFriendREQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AgreeFriendREQ::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgreeFriendREQ& AgreeFriendREQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_AgreeFriendREQ.base);
  return *internal_default_instance();
}


void AgreeFriendREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.AgreeFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AgreeFriendREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.AgreeFriendREQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.AgreeFriendREQ.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.AgreeFriendREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.AgreeFriendREQ)
  return false;
#undef DO_
}

void AgreeFriendREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.AgreeFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.AgreeFriendREQ.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.AgreeFriendREQ)
}

::google::protobuf::uint8* AgreeFriendREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.AgreeFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.AgreeFriendREQ.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.AgreeFriendREQ)
  return target;
}

size_t AgreeFriendREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.AgreeFriendREQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgreeFriendREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.AgreeFriendREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const AgreeFriendREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgreeFriendREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.AgreeFriendREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.AgreeFriendREQ)
    MergeFrom(*source);
  }
}

void AgreeFriendREQ::MergeFrom(const AgreeFriendREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.AgreeFriendREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
}

void AgreeFriendREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.AgreeFriendREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgreeFriendREQ::CopyFrom(const AgreeFriendREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.AgreeFriendREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeFriendREQ::IsInitialized() const {
  return true;
}

void AgreeFriendREQ::Swap(AgreeFriendREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgreeFriendREQ::InternalSwap(AgreeFriendREQ* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AgreeFriendREQ::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AgreeFriendRES::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgreeFriendRES::kChatIdFieldNumber;
const int AgreeFriendRES::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgreeFriendRES::AgreeFriendRES()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_AgreeFriendRES.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.AgreeFriendRES)
}
AgreeFriendRES::AgreeFriendRES(const AgreeFriendRES& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chatid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chatid().size() > 0) {
    chatid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatPb.AgreeFriendRES)
}

void AgreeFriendRES::SharedCtor() {
  chatid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AgreeFriendRES::~AgreeFriendRES() {
  // @@protoc_insertion_point(destructor:ChatPb.AgreeFriendRES)
  SharedDtor();
}

void AgreeFriendRES::SharedDtor() {
  chatid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AgreeFriendRES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AgreeFriendRES::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgreeFriendRES& AgreeFriendRES::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_AgreeFriendRES.base);
  return *internal_default_instance();
}


void AgreeFriendRES::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.AgreeFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chatid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AgreeFriendRES::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.AgreeFriendRES)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string chatId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chatid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chatid().data(), static_cast<int>(this->chatid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.AgreeFriendRES.chatId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.AgreeFriendRES.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.AgreeFriendRES)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.AgreeFriendRES)
  return false;
#undef DO_
}

void AgreeFriendRES::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.AgreeFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chatId = 1;
  if (this->chatid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatid().data(), static_cast<int>(this->chatid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.AgreeFriendRES.chatId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chatid(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.AgreeFriendRES.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.AgreeFriendRES)
}

::google::protobuf::uint8* AgreeFriendRES::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.AgreeFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chatId = 1;
  if (this->chatid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chatid().data(), static_cast<int>(this->chatid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.AgreeFriendRES.chatId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chatid(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.AgreeFriendRES.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.AgreeFriendRES)
  return target;
}

size_t AgreeFriendRES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.AgreeFriendRES)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string chatId = 1;
  if (this->chatid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chatid());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgreeFriendRES::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.AgreeFriendRES)
  GOOGLE_DCHECK_NE(&from, this);
  const AgreeFriendRES* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgreeFriendRES>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.AgreeFriendRES)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.AgreeFriendRES)
    MergeFrom(*source);
  }
}

void AgreeFriendRES::MergeFrom(const AgreeFriendRES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.AgreeFriendRES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chatid().size() > 0) {

    chatid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void AgreeFriendRES::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.AgreeFriendRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgreeFriendRES::CopyFrom(const AgreeFriendRES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.AgreeFriendRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeFriendRES::IsInitialized() const {
  return true;
}

void AgreeFriendRES::Swap(AgreeFriendRES* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgreeFriendRES::InternalSwap(AgreeFriendRES* other) {
  using std::swap;
  chatid_.Swap(&other->chatid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AgreeFriendRES::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteFriendREQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendREQ::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendREQ::DeleteFriendREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_DeleteFriendREQ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.DeleteFriendREQ)
}
DeleteFriendREQ::DeleteFriendREQ(const DeleteFriendREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  // @@protoc_insertion_point(copy_constructor:ChatPb.DeleteFriendREQ)
}

void DeleteFriendREQ::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteFriendREQ::~DeleteFriendREQ() {
  // @@protoc_insertion_point(destructor:ChatPb.DeleteFriendREQ)
  SharedDtor();
}

void DeleteFriendREQ::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFriendREQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteFriendREQ::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendREQ& DeleteFriendREQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_DeleteFriendREQ.base);
  return *internal_default_instance();
}


void DeleteFriendREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.DeleteFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteFriendREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.DeleteFriendREQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.DeleteFriendREQ.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.DeleteFriendREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.DeleteFriendREQ)
  return false;
#undef DO_
}

void DeleteFriendREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.DeleteFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.DeleteFriendREQ.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.DeleteFriendREQ)
}

::google::protobuf::uint8* DeleteFriendREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.DeleteFriendREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.DeleteFriendREQ.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.DeleteFriendREQ)
  return target;
}

size_t DeleteFriendREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.DeleteFriendREQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteFriendREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.DeleteFriendREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.DeleteFriendREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.DeleteFriendREQ)
    MergeFrom(*source);
  }
}

void DeleteFriendREQ::MergeFrom(const DeleteFriendREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.DeleteFriendREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
}

void DeleteFriendREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.DeleteFriendREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendREQ::CopyFrom(const DeleteFriendREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.DeleteFriendREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendREQ::IsInitialized() const {
  return true;
}

void DeleteFriendREQ::Swap(DeleteFriendREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendREQ::InternalSwap(DeleteFriendREQ* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteFriendREQ::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteFriendRES::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendRES::kUidFieldNumber;
const int DeleteFriendRES::kSucceededFieldNumber;
const int DeleteFriendRES::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendRES::DeleteFriendRES()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2econtacts_2eproto::scc_info_DeleteFriendRES.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatPb.DeleteFriendRES)
}
DeleteFriendRES::DeleteFriendRES(const DeleteFriendRES& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  succeeded_ = from.succeeded_;
  // @@protoc_insertion_point(copy_constructor:ChatPb.DeleteFriendRES)
}

void DeleteFriendRES::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  succeeded_ = false;
}

DeleteFriendRES::~DeleteFriendRES() {
  // @@protoc_insertion_point(destructor:ChatPb.DeleteFriendRES)
  SharedDtor();
}

void DeleteFriendRES::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteFriendRES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteFriendRES::descriptor() {
  ::protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendRES& DeleteFriendRES::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2econtacts_2eproto::scc_info_DeleteFriendRES.base);
  return *internal_default_instance();
}


void DeleteFriendRES::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatPb.DeleteFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  succeeded_ = false;
  _internal_metadata_.Clear();
}

bool DeleteFriendRES::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatPb.DeleteFriendRES)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.DeleteFriendRES.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool succeeded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &succeeded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatPb.DeleteFriendRES.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatPb.DeleteFriendRES)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatPb.DeleteFriendRES)
  return false;
#undef DO_
}

void DeleteFriendRES::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatPb.DeleteFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.DeleteFriendRES.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->succeeded(), output);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.DeleteFriendRES.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatPb.DeleteFriendRES)
}

::google::protobuf::uint8* DeleteFriendRES::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatPb.DeleteFriendRES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.DeleteFriendRES.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->succeeded(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatPb.DeleteFriendRES.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatPb.DeleteFriendRES)
  return target;
}

size_t DeleteFriendRES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatPb.DeleteFriendRES)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteFriendRES::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatPb.DeleteFriendRES)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendRES* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendRES>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatPb.DeleteFriendRES)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatPb.DeleteFriendRES)
    MergeFrom(*source);
  }
}

void DeleteFriendRES::MergeFrom(const DeleteFriendRES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatPb.DeleteFriendRES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.succeeded() != 0) {
    set_succeeded(from.succeeded());
  }
}

void DeleteFriendRES::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatPb.DeleteFriendRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendRES::CopyFrom(const DeleteFriendRES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatPb.DeleteFriendRES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendRES::IsInitialized() const {
  return true;
}

void DeleteFriendRES::Swap(DeleteFriendRES* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendRES::InternalSwap(DeleteFriendRES* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(succeeded_, other->succeeded_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteFriendRES::GetMetadata() const {
  protobuf_chat_2econtacts_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2econtacts_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ChatPb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::ContactREQ* Arena::CreateMaybeMessage< ::ChatPb::ContactREQ >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::ContactREQ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::ContactRES* Arena::CreateMaybeMessage< ::ChatPb::ContactRES >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::ContactRES >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::SearchUserREQ* Arena::CreateMaybeMessage< ::ChatPb::SearchUserREQ >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::SearchUserREQ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::SearchUserRES* Arena::CreateMaybeMessage< ::ChatPb::SearchUserRES >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::SearchUserRES >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::ApplyFriendREQ* Arena::CreateMaybeMessage< ::ChatPb::ApplyFriendREQ >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::ApplyFriendREQ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::ApplyFriendRES* Arena::CreateMaybeMessage< ::ChatPb::ApplyFriendRES >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::ApplyFriendRES >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::AgreeFriendREQ* Arena::CreateMaybeMessage< ::ChatPb::AgreeFriendREQ >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::AgreeFriendREQ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::AgreeFriendRES* Arena::CreateMaybeMessage< ::ChatPb::AgreeFriendRES >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::AgreeFriendRES >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::DeleteFriendREQ* Arena::CreateMaybeMessage< ::ChatPb::DeleteFriendREQ >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::DeleteFriendREQ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ChatPb::DeleteFriendRES* Arena::CreateMaybeMessage< ::ChatPb::DeleteFriendRES >(Arena* arena) {
  return Arena::CreateInternal< ::ChatPb::DeleteFriendRES >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
